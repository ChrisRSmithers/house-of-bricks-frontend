worker_processes auto;

error_log  /usr/local/openresty/nginx/logs/error.log warn;
pid        /var/run/nginx.pid;

# env vars
env SERVER_HOST;

events {
  worker_connections  1024;
}

http {
  include       /usr/local/openresty/nginx/conf/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /usr/local/openresty/nginx/logs/access.log  main;

  sendfile           off;
  expires            0;
  autoindex          off;
  keepalive_timeout  65;

  gzip on;
  gzip_http_version 1.0;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_min_length 256;
  gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/json
    application/xml
    application/rss+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  server {
    set $template_root /usr/local/openresty/nginx/html;

    listen       80;
    server_name  *.houseofbricks.com localhost:*;

    more_set_headers "Server: House of Bricks Frontend";

    add_header  X-Content-Type-Options nosniff;
    add_header  X-XSS-Protection "1; mode=block";
    add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";

    proxy_set_header X-Forwarded-Proto $scheme;

    # redirect to https on deployed environments
    if ($http_x_forwarded_proto != "https") {
      set $redirect 1;
    }
    if ($host = "localhost") {
      set $redirect 0;
    }
    if ($redirect = 1) {
      return 301 https://$host$request_uri;
    }

    # serve resources
    location /resources {
      alias   /usr/local/openresty/nginx/html/resources;
    }

    location / {
      root   /usr/local/openresty/nginx/html;
      try_files $uri /index.html =404;
      default_type text/html;
    }

    location /bundle.js {
      alias   /usr/local/openresty/nginx/html/editorBundle.js;
    }

    location /vendor.bundle.js {
      alias   /usr/local/openresty/nginx/html/vendor.bundle.js;
    }

    location /favicon.ico {
      alias /usr/local/openresty/nginx/resources/favicon.ico;
    }

    location /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/local/openresty/nginx/html;
    }
  }
}
